@Library('Jenkins-shared-library')_

pipeline{

    agent any

    parameters{

        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        // string(name: 'ImageName', description: "name of the docker build", defaultValue: 'javapp')
        // string(name: 'ImageTag', description: "tag of the docker build", defaultValue: 'v1')
        // string(name: 'DockerHubUser', description: "name of the Application", defaultValue: 'ssgoyal696')
        string(name: 'DOCKER_IMAGE_NAME', description: 'Name for the Docker image', defaultValue: 'my-custom-image')
        string(name: 'DOCKERFILE_PATH', description: 'Path to the Dockerfile', defaultValue: 'path/to/your/Dockerfile')
    }

    stages{
         
        stage('Git Checkout'){
                    when { expression {  params.action == 'create' } }
            steps{
            gitCheckout(
                branch: "master",
                url: 'https://github.com/sgoyal696/Java_Project.git'
            )
            }
        }
        //  stage('Unit Test maven'){
         
        //  when { expression {  params.action == 'create' } }

        //     steps{
        //        script{
                   
        //            mvnTest()
        //        }
        //     }
        // }
        //  stage('Integration Test maven'){
        //  when { expression {  params.action == 'create' } }
        //     steps{
        //        script{
                   
        //            mvnUnitTest()
        //        }
        //     }
        // }  
        // stage('Static code Analysis sonarqube'){
        //  when { expression {  params.action == 'create' } }
        //     steps{
        //        script{
        //            def SonarqubeCredentialsId = 'sonarqube'
        //            staticCodeAnalysis(SonarqubeCredentialsId )
        //        }
        //     }
        // } 
        // stage('Quality gate analysis'){
        //  when { expression {  params.action == 'create' } }
        //     steps{
        //        script{
        //            def SonarqubeCredentialsId = 'sonarqube'
        //            qualityGateStatus(SonarqubeCredentialsId )
        //        }
        //     }
        // } 
        // stage('Maven Build'){
        //  when { expression {  params.action == 'create' } }
        //     steps{
        //        script{
        //            mvnBuild()
        //        }
        //     }
        // }
        stage('Docker Image Build'){
         when { expression {  params.action == 'create' } }
            steps{
               script{
                    def dockerImage
                    def imageName = params.DOCKER_IMAGE_NAME
                    def dockerfilePath = params.DOCKERFILE_PATH

                    dockerImage = dockerBuild.buildDockerImage(imageName, dockerfilePath)
                   //dockerBuild("${params.ImageName}","${params.ImageTag}","${params.DockerHubUser}")
               }
            }
        }  
    }
}

